/*
 * Copyright 2017 Simeon Simeonov and Swoop, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.swoop.spark.records


/** Definitions for the meaning of bits in the `features` bit mask of [[com.swoop.spark.records.Record]].
  *
  * The least significant 16 bits are reserved for framework use.
  * The next 15 bits are available for application use.
  * The most significant bit is reserved for framework use also.
  */
trait Features {
  // @formatter:off
  final val ERROR = 1 << 0             //       1     record has ERROR issue(s)
  final val WARNING = 1 << 1           //       2     record has WARNING issue(s)
  final val INFO = 1 << 2              //       4     record has INFO issue(s)
  final val DEBUG = 1 << 3             //       8     record has DEBUG issue(s)
  final val SKIP = 1 << 4              //      16     record must be skipped and not persisted
  final val INVALID = 1 << 5           //      32     e.g., unexpected schema
  final val CORRUPT = 1 << 6           //      64     e.g., unparseable JSON
  final val RESERVED_7 = 1 << 7        //     128     reserved for framework use
  final val INTERNAL_RECORD = 1 << 8   //     256     e.g., test records generated by the system
  final val UNKNOWN = 1 << 9           //     512     e.g., unknown source type
  final val QUALITY_CONCERN = 1 << 10  //    1024     e.g., strange client timestamp
  final val LATE_ARRIVAL = 1 << 11     //    2048     e.g., input outside typical processing window
  final val RESERVED_12 = 1 << 12      //    4096     reserved for framework use
  final val RESERVED_13 = 1 << 12      //    8192     reserved for framework use
  final val RESERVED_14 = 1 << 14      //   16384     reserved for framework use
  final val RESERVED_15 = 1 << 15      //   32768     reserved for framework use
  // @formatter:on
}


object Features extends Features
